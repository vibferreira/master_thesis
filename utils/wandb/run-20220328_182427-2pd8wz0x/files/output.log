
Training the network for 5 epochs, with a batch size of 8

Training Epoch [0/5]:  71%|▋| 5/7 [00:04<00:01,  1.81it/s, acc=0.75268364, dice=0.57125473, iou=0.3998296
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

torch.Size([1, 256, 256])
Training Epoch [1/5]:  43%|▍| 3/7 [00:01<00:01,  2.57it/s, acc=0.81567, dice=0.65846056, iou=0.4908246, l
torch.Size([256, 256])

Validation Epoch [1/5]:  25%|▎| 1/4 [00:00<00:01,  2.89it/s, acc_val=0.82151985, iou_val=0.18505713, loss
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

Training Epoch [2/5]:  29%|▎| 2/7 [00:00<00:01,  2.83it/s, acc=0.7918167, dice=0.46874726, iou=0.30612013
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

Validation Epoch [2/5]:  50%|▌| 2/4 [00:00<00:00,  4.39it/s, acc_val=0.94571114, iou_val=0.7008461, loss_
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

Training Epoch [3/5]:  43%|▍| 3/7 [00:00<00:01,  3.33it/s, acc=0.8824978, dice=0.7538252, iou=0.60491127,
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

torch.Size([1, 256, 256])
Training Epoch [4/5]:  86%|▊| 6/7 [00:01<00:00,  3.28it/s, acc=0.84129715, dice=0.61990774, iou=0.4491784
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])
torch.Size([1, 256, 256])
torch.Size([256, 256])

torch.Size([1, 256, 256])
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/threading.py", line 973, in _bootstrap_inner
    self.run()
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/threading.py", line 910, in run
    self._target(*self._args, **self._kwargs)
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 149, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 125, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 397, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 222, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/share/etud/e2008984/miniconda3/envs/torch_env/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 227, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
